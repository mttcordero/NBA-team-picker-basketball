<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>