<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="pictureBox1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>